<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;

class CartController extends Controller
{
    public function index()
    {
        $cart = session('cart', []);
        return view('cart', compact('cart')); // üëâ ƒë√∫ng r·ªìi, view l√† cart.blade.php
    }

    public function add(Request $request)
{
    // L·∫•y d·ªØ li·ªáu t·ª´ form v√† √©p ki·ªÉu n·∫øu c·∫ßn
    $product_id = $request->input('product_id');
    $product_name = $request->input('product_name');
    $price = (int) $request->input('price');
    $size = $request->input('size');
    $quantity = (int) $request->input('quantity');
    $discountValue = (int) $request->input('discountValue');

    // Ki·ªÉm tra d·ªØ li·ªáu c·∫ßn thi·∫øt
    if (!$product_id || !$product_name || !$price || !$size || !$quantity) {
        return redirect()->back()->with('error', 'Thi·∫øu th√¥ng tin s·∫£n ph·∫©m.');
    }

    // T√≠nh gi√° sau gi·∫£m
    $discount_amount = ($price * $discountValue) / 100;
    $price_after_discount = $price - $discount_amount;

    // L·∫•y gi·ªè h√†ng hi·ªán t·∫°i t·ª´ session
    $cart = session()->get('cart', []);

    // Ki·ªÉm tra n·∫øu s·∫£n ph·∫©m ƒë√£ t·ªìn t·∫°i (c√πng ID v√† size) th√¨ c·ªông th√™m s·ªë l∆∞·ª£ng
    $found = false;
    foreach ($cart as &$item) {
        if (
            isset($item['product_id'], $item['size']) &&
            $item['product_id'] == $product_id &&
            $item['size'] == $size
        ) {
            $item['quantity'] += $quantity;
            $found = true;
            break;
        }
    }
    
    
    // N·∫øu ch∆∞a c√≥ trong gi·ªè th√¨ th√™m m·ªõi
    if (!$found) {
        $cart[] = [
            'product_id' => $product_id,
            'product_name' => $product_name,
            'price' => $price,
            'size' => $size,
            'quantity' => $quantity,
            'discountValue' => $discountValue,
            'price_after_discount' => $price_after_discount,
        ];
    }

    // L∆∞u l·∫°i session
    session()->put('cart', $cart);

    return redirect()->route('cart')->with('success', 'ƒê√£ th√™m v√†o gi·ªè h√†ng!');
}


    public function remove(Request $request)
    {
        $productId = $request->input('product_id');
        $size = $request->input('size');

        if (!$productId || !$size) {
            return redirect()->back()->with('error', 'Thi·∫øu th√¥ng tin s·∫£n ph·∫©m ƒë·ªÉ x√≥a.');
        }

        $cart = session()->get('cart', []);

        foreach ($cart as $index => $item) {
            if ($item['product_id'] == $productId && $item['size'] == $size) {
                unset($cart[$index]);
                break;
            }
        }

        $cart = array_values($cart); // Re-index m·∫£ng
        session()->put('cart', $cart);

        return redirect()->back()->with('success', 'ƒê√£ x√≥a s·∫£n ph·∫©m kh·ªèi gi·ªè h√†ng.');
    }
}
